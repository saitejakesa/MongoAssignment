1. Find all the information about each products
Ans) db.MongoAssign1.find()

2. Find the product price which are between 400 to 800
Ans) db.MongoAssign1.find({$and:[{product_price:{$gt:400}},{product_price:{$lt:800}}]})

3. Find the product price which are not between 400 to 600
Ans) db.MongoAssign1.find({$or:[{product_price:{$lte:400}},{product_price:{$gte:600}}]})

4. List the four product which are grater than 500 in price 
Ans) db.MongoAssign1.find({product_price:{$gt:500}})

Note: only 3 products are for which price is greater than 500.

5. Find the product name and product material of each products
Ans) db.MongoAssign1.find({},{product_name:1,product_material:1})

6. Find the product with a row id of 10
Ans) db.MongoAssign1.find({"id":"10"});

7. Find only the product name and product material of id 10

db.MongoAssign1.find({"id":"10"},{product_name:1,product_material:1});

8. Find all products which contain the value of soft in product material 
db.MongoAssign1.find({"product_material":"Soft"})

9. Find products which contain product color indigo  and product price 492.00
db.MongoAssign1.find({$and:[{"product_color":"indigo"},{product_price:492.00}]})

10. Delete the products which product price value are same
db.MongoAssign1
  .aggregate([
    { $group: { _id: "$product_price", count: { $count: {} } } },
    // match count > 1
    { $match: { count: { $gt: 1 } } },
  ])
  .forEach((doc) => {
    // remove all docs with the repeated price
    db.MongoAssign1.deleteMany({ product_price: doc._id });
  });

